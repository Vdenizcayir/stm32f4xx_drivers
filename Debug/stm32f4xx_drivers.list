
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000528  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006d0  080006d8  000106d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006d0  080006d0  000106d8  2**0
                  CONTENTS
  4 .ARM          00000000  080006d0  080006d0  000106d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006d0  080006d8  000106d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006d0  080006d0  000106d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006d4  080006d4  000106d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000106d8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000106d8  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000088d  00000000  00000000  00010708  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000020f  00000000  00000000  00010f95  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b0  00000000  00000000  000111a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000088  00000000  00000000  00011258  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000012d2  00000000  00000000  000112e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c08  00000000  00000000  000125b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005009  00000000  00000000  000131ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000181c3  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001fc  00000000  00000000  00018214  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080006b8 	.word	0x080006b8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080006b8 	.word	0x080006b8

080001e8 <main>:

#define HIGH ENABLE
#define BTN_PRESSED HIGH

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b086      	sub	sp, #24
 80001ec:	af00      	add	r7, sp, #0

	GPIO_Handle_t GPIOButton, GPIOLed;
	GPIOButton.pGPIOx=GPIOA;
 80001ee:	4b19      	ldr	r3, [pc, #100]	; (8000254 <main+0x6c>)
 80001f0:	60fb      	str	r3, [r7, #12]
	GPIOButton.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_0;
 80001f2:	2300      	movs	r3, #0
 80001f4:	743b      	strb	r3, [r7, #16]
	GPIOButton.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_INPUT;
 80001f6:	2300      	movs	r3, #0
 80001f8:	747b      	strb	r3, [r7, #17]
	GPIOButton.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 80001fa:	2302      	movs	r3, #2
 80001fc:	74bb      	strb	r3, [r7, #18]
	//GPIOButton.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP; // bu satır mode output olduğu zaman geçerlidir.
	GPIOButton.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD; // schematic de button için pullup-down ayarlı olduğu için burada gerek yok.
 80001fe:	2300      	movs	r3, #0
 8000200:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000202:	2101      	movs	r1, #1
 8000204:	4813      	ldr	r0, [pc, #76]	; (8000254 <main+0x6c>)
 8000206:	f000 f853 	bl	80002b0 <GPIO_PeriClockControl>
	GPIO_Init(&GPIOButton);
 800020a:	f107 030c 	add.w	r3, r7, #12
 800020e:	4618      	mov	r0, r3
 8000210:	f000 f936 	bl	8000480 <GPIO_Init>


	GPIOLed.pGPIOx=GPIOD;
 8000214:	4b10      	ldr	r3, [pc, #64]	; (8000258 <main+0x70>)
 8000216:	603b      	str	r3, [r7, #0]
	GPIOLed.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_12;
 8000218:	230c      	movs	r3, #12
 800021a:	713b      	strb	r3, [r7, #4]
	GPIOLed.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_OUTPUT;
 800021c:	2301      	movs	r3, #1
 800021e:	717b      	strb	r3, [r7, #5]
	GPIOLed.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 8000220:	2302      	movs	r3, #2
 8000222:	71bb      	strb	r3, [r7, #6]
	GPIOLed.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 8000224:	2300      	movs	r3, #0
 8000226:	723b      	strb	r3, [r7, #8]
	GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 8000228:	2300      	movs	r3, #0
 800022a:	71fb      	strb	r3, [r7, #7]
	GPIO_PeriClockControl(GPIOD, ENABLE);
 800022c:	2101      	movs	r1, #1
 800022e:	480a      	ldr	r0, [pc, #40]	; (8000258 <main+0x70>)
 8000230:	f000 f83e 	bl	80002b0 <GPIO_PeriClockControl>
	GPIO_Init(&GPIOLed);
 8000234:	463b      	mov	r3, r7
 8000236:	4618      	mov	r0, r3
 8000238:	f000 f922 	bl	8000480 <GPIO_Init>
	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0)== BTN_PRESSED)
 800023c:	2100      	movs	r1, #0
 800023e:	4805      	ldr	r0, [pc, #20]	; (8000254 <main+0x6c>)
 8000240:	f000 f9ea 	bl	8000618 <GPIO_ReadFromInputPin>
 8000244:	4603      	mov	r3, r0
 8000246:	2b01      	cmp	r3, #1
 8000248:	d1f8      	bne.n	800023c <main+0x54>
			{
				GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 800024a:	210c      	movs	r1, #12
 800024c:	4802      	ldr	r0, [pc, #8]	; (8000258 <main+0x70>)
 800024e:	f000 f9f9 	bl	8000644 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0)== BTN_PRESSED)
 8000252:	e7f3      	b.n	800023c <main+0x54>
 8000254:	40020000 	.word	0x40020000
 8000258:	40020c00 	.word	0x40020c00

0800025c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800025c:	480d      	ldr	r0, [pc, #52]	; (8000294 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800025e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000260:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000264:	480c      	ldr	r0, [pc, #48]	; (8000298 <LoopForever+0x6>)
  ldr r1, =_edata
 8000266:	490d      	ldr	r1, [pc, #52]	; (800029c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000268:	4a0d      	ldr	r2, [pc, #52]	; (80002a0 <LoopForever+0xe>)
  movs r3, #0
 800026a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800026c:	e002      	b.n	8000274 <LoopCopyDataInit>

0800026e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800026e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000270:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000272:	3304      	adds	r3, #4

08000274 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000274:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000276:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000278:	d3f9      	bcc.n	800026e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800027a:	4a0a      	ldr	r2, [pc, #40]	; (80002a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800027c:	4c0a      	ldr	r4, [pc, #40]	; (80002a8 <LoopForever+0x16>)
  movs r3, #0
 800027e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000280:	e001      	b.n	8000286 <LoopFillZerobss>

08000282 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000282:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000284:	3204      	adds	r2, #4

08000286 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000286:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000288:	d3fb      	bcc.n	8000282 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800028a:	f000 f9f1 	bl	8000670 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800028e:	f7ff ffab 	bl	80001e8 <main>

08000292 <LoopForever>:

LoopForever:
  b LoopForever
 8000292:	e7fe      	b.n	8000292 <LoopForever>
  ldr   r0, =_estack
 8000294:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000298:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800029c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002a0:	080006d8 	.word	0x080006d8
  ldr r2, =_sbss
 80002a4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a8:	2000001c 	.word	0x2000001c

080002ac <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002ac:	e7fe      	b.n	80002ac <ADC_IRQHandler>
	...

080002b0 <GPIO_PeriClockControl>:


/*Peripheral Clock Setup*/
//Bu fonksiyon verilen GPIO portu için çevresel saati etkinleştirir veya devre dışı bırakır
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnableOrDisable)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	460b      	mov	r3, r1
 80002ba:	70fb      	strb	r3, [r7, #3]
	if(EnableOrDisable==ENABLE)
 80002bc:	78fb      	ldrb	r3, [r7, #3]
 80002be:	2b01      	cmp	r3, #1
 80002c0:	d162      	bne.n	8000388 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx==GPIOA)
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a64      	ldr	r2, [pc, #400]	; (8000458 <GPIO_PeriClockControl+0x1a8>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d106      	bne.n	80002d8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002ca:	4b64      	ldr	r3, [pc, #400]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80002cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ce:	4a63      	ldr	r2, [pc, #396]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80002d0:	f043 0301 	orr.w	r3, r3, #1
 80002d4:	6313      	str	r3, [r2, #48]	; 0x30
			else if(pGPIOx==GPIOI)
			{
				GPIOI_PCLK_DI();
			}
	}
}
 80002d6:	e0b9      	b.n	800044c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOB)
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a61      	ldr	r2, [pc, #388]	; (8000460 <GPIO_PeriClockControl+0x1b0>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d106      	bne.n	80002ee <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002e0:	4b5e      	ldr	r3, [pc, #376]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80002e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e4:	4a5d      	ldr	r2, [pc, #372]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80002e6:	f043 0302 	orr.w	r3, r3, #2
 80002ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ec:	e0ae      	b.n	800044c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOC)
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4a5c      	ldr	r2, [pc, #368]	; (8000464 <GPIO_PeriClockControl+0x1b4>)
 80002f2:	4293      	cmp	r3, r2
 80002f4:	d106      	bne.n	8000304 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002f6:	4b59      	ldr	r3, [pc, #356]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80002f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fa:	4a58      	ldr	r2, [pc, #352]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80002fc:	f043 0304 	orr.w	r3, r3, #4
 8000300:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000302:	e0a3      	b.n	800044c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOD)
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a58      	ldr	r2, [pc, #352]	; (8000468 <GPIO_PeriClockControl+0x1b8>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d106      	bne.n	800031a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800030c:	4b53      	ldr	r3, [pc, #332]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 800030e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000310:	4a52      	ldr	r2, [pc, #328]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000312:	f043 0308 	orr.w	r3, r3, #8
 8000316:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000318:	e098      	b.n	800044c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOE)
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	4a53      	ldr	r2, [pc, #332]	; (800046c <GPIO_PeriClockControl+0x1bc>)
 800031e:	4293      	cmp	r3, r2
 8000320:	d106      	bne.n	8000330 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000322:	4b4e      	ldr	r3, [pc, #312]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000324:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000326:	4a4d      	ldr	r2, [pc, #308]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000328:	f043 0310 	orr.w	r3, r3, #16
 800032c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032e:	e08d      	b.n	800044c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOF)
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	4a4f      	ldr	r2, [pc, #316]	; (8000470 <GPIO_PeriClockControl+0x1c0>)
 8000334:	4293      	cmp	r3, r2
 8000336:	d106      	bne.n	8000346 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000338:	4b48      	ldr	r3, [pc, #288]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 800033a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033c:	4a47      	ldr	r2, [pc, #284]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 800033e:	f043 0320 	orr.w	r3, r3, #32
 8000342:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000344:	e082      	b.n	800044c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOG)
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	4a4a      	ldr	r2, [pc, #296]	; (8000474 <GPIO_PeriClockControl+0x1c4>)
 800034a:	4293      	cmp	r3, r2
 800034c:	d106      	bne.n	800035c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800034e:	4b43      	ldr	r3, [pc, #268]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000352:	4a42      	ldr	r2, [pc, #264]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000354:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000358:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035a:	e077      	b.n	800044c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOH)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	4a46      	ldr	r2, [pc, #280]	; (8000478 <GPIO_PeriClockControl+0x1c8>)
 8000360:	4293      	cmp	r3, r2
 8000362:	d106      	bne.n	8000372 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000364:	4b3d      	ldr	r3, [pc, #244]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000366:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000368:	4a3c      	ldr	r2, [pc, #240]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 800036a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800036e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000370:	e06c      	b.n	800044c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx==GPIOI)
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	4a41      	ldr	r2, [pc, #260]	; (800047c <GPIO_PeriClockControl+0x1cc>)
 8000376:	4293      	cmp	r3, r2
 8000378:	d168      	bne.n	800044c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800037a:	4b38      	ldr	r3, [pc, #224]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 800037c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037e:	4a37      	ldr	r2, [pc, #220]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000380:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000384:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000386:	e061      	b.n	800044c <GPIO_PeriClockControl+0x19c>
		if(pGPIOx==GPIOA)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	4a33      	ldr	r2, [pc, #204]	; (8000458 <GPIO_PeriClockControl+0x1a8>)
 800038c:	4293      	cmp	r3, r2
 800038e:	d106      	bne.n	800039e <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8000390:	4b32      	ldr	r3, [pc, #200]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000392:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000394:	4a31      	ldr	r2, [pc, #196]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000396:	f023 0301 	bic.w	r3, r3, #1
 800039a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039c:	e056      	b.n	800044c <GPIO_PeriClockControl+0x19c>
			else if(pGPIOx==GPIOB)
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	4a2f      	ldr	r2, [pc, #188]	; (8000460 <GPIO_PeriClockControl+0x1b0>)
 80003a2:	4293      	cmp	r3, r2
 80003a4:	d106      	bne.n	80003b4 <GPIO_PeriClockControl+0x104>
				GPIOB_PCLK_DI();
 80003a6:	4b2d      	ldr	r3, [pc, #180]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80003a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003aa:	4a2c      	ldr	r2, [pc, #176]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80003ac:	f023 0302 	bic.w	r3, r3, #2
 80003b0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b2:	e04b      	b.n	800044c <GPIO_PeriClockControl+0x19c>
			else if(pGPIOx==GPIOC)
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	4a2b      	ldr	r2, [pc, #172]	; (8000464 <GPIO_PeriClockControl+0x1b4>)
 80003b8:	4293      	cmp	r3, r2
 80003ba:	d106      	bne.n	80003ca <GPIO_PeriClockControl+0x11a>
				GPIOC_PCLK_DI();
 80003bc:	4b27      	ldr	r3, [pc, #156]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80003be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c0:	4a26      	ldr	r2, [pc, #152]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80003c2:	f023 0304 	bic.w	r3, r3, #4
 80003c6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c8:	e040      	b.n	800044c <GPIO_PeriClockControl+0x19c>
			else if(pGPIOx==GPIOD)
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	4a26      	ldr	r2, [pc, #152]	; (8000468 <GPIO_PeriClockControl+0x1b8>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d106      	bne.n	80003e0 <GPIO_PeriClockControl+0x130>
				GPIOD_PCLK_DI();
 80003d2:	4b22      	ldr	r3, [pc, #136]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80003d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d6:	4a21      	ldr	r2, [pc, #132]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80003d8:	f023 0308 	bic.w	r3, r3, #8
 80003dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003de:	e035      	b.n	800044c <GPIO_PeriClockControl+0x19c>
			else if(pGPIOx==GPIOE)
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	4a22      	ldr	r2, [pc, #136]	; (800046c <GPIO_PeriClockControl+0x1bc>)
 80003e4:	4293      	cmp	r3, r2
 80003e6:	d106      	bne.n	80003f6 <GPIO_PeriClockControl+0x146>
				GPIOE_PCLK_DI();
 80003e8:	4b1c      	ldr	r3, [pc, #112]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80003ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ec:	4a1b      	ldr	r2, [pc, #108]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 80003ee:	f023 0310 	bic.w	r3, r3, #16
 80003f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f4:	e02a      	b.n	800044c <GPIO_PeriClockControl+0x19c>
			else if(pGPIOx==GPIOF)
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4a1d      	ldr	r2, [pc, #116]	; (8000470 <GPIO_PeriClockControl+0x1c0>)
 80003fa:	4293      	cmp	r3, r2
 80003fc:	d106      	bne.n	800040c <GPIO_PeriClockControl+0x15c>
				GPIOF_PCLK_DI();
 80003fe:	4b17      	ldr	r3, [pc, #92]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000402:	4a16      	ldr	r2, [pc, #88]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000404:	f023 0320 	bic.w	r3, r3, #32
 8000408:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040a:	e01f      	b.n	800044c <GPIO_PeriClockControl+0x19c>
			else if(pGPIOx==GPIOG)
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	4a19      	ldr	r2, [pc, #100]	; (8000474 <GPIO_PeriClockControl+0x1c4>)
 8000410:	4293      	cmp	r3, r2
 8000412:	d106      	bne.n	8000422 <GPIO_PeriClockControl+0x172>
				GPIOG_PCLK_DI();
 8000414:	4b11      	ldr	r3, [pc, #68]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000416:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000418:	4a10      	ldr	r2, [pc, #64]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 800041a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800041e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000420:	e014      	b.n	800044c <GPIO_PeriClockControl+0x19c>
			else if(pGPIOx==GPIOH)
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4a14      	ldr	r2, [pc, #80]	; (8000478 <GPIO_PeriClockControl+0x1c8>)
 8000426:	4293      	cmp	r3, r2
 8000428:	d106      	bne.n	8000438 <GPIO_PeriClockControl+0x188>
				GPIOH_PCLK_DI();
 800042a:	4b0c      	ldr	r3, [pc, #48]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 800042c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042e:	4a0b      	ldr	r2, [pc, #44]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000430:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000434:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000436:	e009      	b.n	800044c <GPIO_PeriClockControl+0x19c>
			else if(pGPIOx==GPIOI)
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	4a10      	ldr	r2, [pc, #64]	; (800047c <GPIO_PeriClockControl+0x1cc>)
 800043c:	4293      	cmp	r3, r2
 800043e:	d105      	bne.n	800044c <GPIO_PeriClockControl+0x19c>
				GPIOI_PCLK_DI();
 8000440:	4b06      	ldr	r3, [pc, #24]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000442:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000444:	4a05      	ldr	r2, [pc, #20]	; (800045c <GPIO_PeriClockControl+0x1ac>)
 8000446:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800044a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044c:	bf00      	nop
 800044e:	370c      	adds	r7, #12
 8000450:	46bd      	mov	sp, r7
 8000452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000456:	4770      	bx	lr
 8000458:	40020000 	.word	0x40020000
 800045c:	40023800 	.word	0x40023800
 8000460:	40020400 	.word	0x40020400
 8000464:	40020800 	.word	0x40020800
 8000468:	40020c00 	.word	0x40020c00
 800046c:	40021000 	.word	0x40021000
 8000470:	40021400 	.word	0x40021400
 8000474:	40021800 	.word	0x40021800
 8000478:	40021c00 	.word	0x40021c00
 800047c:	40022000 	.word	0x40022000

08000480 <GPIO_Init>:

/*Init and De-init*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000480:	b480      	push	{r7}
 8000482:	b085      	sub	sp, #20
 8000484:	af00      	add	r7, sp, #0
 8000486:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000488:	2300      	movs	r3, #0
 800048a:	60fb      	str	r3, [r7, #12]
	//1.Configure the mode of GPIO PIN
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)		//Interrupt olmayan modlar üzerinde çalışır
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	795b      	ldrb	r3, [r3, #5]
 8000490:	2b03      	cmp	r3, #3
 8000492:	d81f      	bhi.n	80004d4 <GPIO_Init+0x54>
	{
		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	795b      	ldrb	r3, [r3, #5]
 8000498:	461a      	mov	r2, r3
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	791b      	ldrb	r3, [r3, #4]
 800049e:	005b      	lsls	r3, r3, #1
 80004a0:	fa02 f303 	lsl.w	r3, r2, r3
 80004a4:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	681a      	ldr	r2, [r3, #0]
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	791b      	ldrb	r3, [r3, #4]
 80004b0:	005b      	lsls	r3, r3, #1
 80004b2:	2103      	movs	r1, #3
 80004b4:	fa01 f303 	lsl.w	r3, r1, r3
 80004b8:	43db      	mvns	r3, r3
 80004ba:	4619      	mov	r1, r3
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	400a      	ands	r2, r1
 80004c2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER|=temp; //setting  //sadece ilgili registerların ilgili bitleri ile çalışma yaptığımız için direkt olarak eşittir kullanılması yanlış olur. |= sadece ilgil biti yapar
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	6819      	ldr	r1, [r3, #0]
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	68fa      	ldr	r2, [r7, #12]
 80004d0:	430a      	orrs	r2, r1
 80004d2:	601a      	str	r2, [r3, #0]
	}
	else
	{
		//Interrupt olan modlar üzerinde çalışır
	}
	temp=0;
 80004d4:	2300      	movs	r3, #0
 80004d6:	60fb      	str	r3, [r7, #12]

	//2.Configure the speed
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed<<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	799b      	ldrb	r3, [r3, #6]
 80004dc:	461a      	mov	r2, r3
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	791b      	ldrb	r3, [r3, #4]
 80004e2:	005b      	lsls	r3, r3, #1
 80004e4:	fa02 f303 	lsl.w	r3, r2, r3
 80004e8:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); 							//clearing
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	689a      	ldr	r2, [r3, #8]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	791b      	ldrb	r3, [r3, #4]
 80004f4:	005b      	lsls	r3, r3, #1
 80004f6:	2103      	movs	r1, #3
 80004f8:	fa01 f303 	lsl.w	r3, r1, r3
 80004fc:	43db      	mvns	r3, r3
 80004fe:	4619      	mov	r1, r3
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	400a      	ands	r2, r1
 8000506:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR|=temp;
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	6899      	ldr	r1, [r3, #8]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	68fa      	ldr	r2, [r7, #12]
 8000514:	430a      	orrs	r2, r1
 8000516:	609a      	str	r2, [r3, #8]


	temp=0;
 8000518:	2300      	movs	r3, #0
 800051a:	60fb      	str	r3, [r7, #12]
	//3.Configure the pull up pull down settings
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	79db      	ldrb	r3, [r3, #7]
 8000520:	461a      	mov	r2, r3
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	791b      	ldrb	r3, [r3, #4]
 8000526:	005b      	lsls	r3, r3, #1
 8000528:	fa02 f303 	lsl.w	r3, r2, r3
 800052c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); 							//clearing
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	68da      	ldr	r2, [r3, #12]
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	791b      	ldrb	r3, [r3, #4]
 8000538:	005b      	lsls	r3, r3, #1
 800053a:	2103      	movs	r1, #3
 800053c:	fa01 f303 	lsl.w	r3, r1, r3
 8000540:	43db      	mvns	r3, r3
 8000542:	4619      	mov	r1, r3
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	400a      	ands	r2, r1
 800054a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR|=temp;
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	68d9      	ldr	r1, [r3, #12]
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	68fa      	ldr	r2, [r7, #12]
 8000558:	430a      	orrs	r2, r1
 800055a:	60da      	str	r2, [r3, #12]

	temp=0;
 800055c:	2300      	movs	r3, #0
 800055e:	60fb      	str	r3, [r7, #12]
	//4.Configure the optype
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	7a1b      	ldrb	r3, [r3, #8]
 8000564:	461a      	mov	r2, r3
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	791b      	ldrb	r3, [r3, #4]
 800056a:	fa02 f303 	lsl.w	r3, r2, r3
 800056e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); 								//clearing
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	685a      	ldr	r2, [r3, #4]
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	791b      	ldrb	r3, [r3, #4]
 800057a:	4619      	mov	r1, r3
 800057c:	2301      	movs	r3, #1
 800057e:	408b      	lsls	r3, r1
 8000580:	43db      	mvns	r3, r3
 8000582:	4619      	mov	r1, r3
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	400a      	ands	r2, r1
 800058a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER|=temp;
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	6859      	ldr	r1, [r3, #4]
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	68fa      	ldr	r2, [r7, #12]
 8000598:	430a      	orrs	r2, r1
 800059a:	605a      	str	r2, [r3, #4]

	temp=0;
 800059c:	2300      	movs	r3, #0
 800059e:	60fb      	str	r3, [r7, #12]
	//5.Configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_ALTFN)
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	795b      	ldrb	r3, [r3, #5]
 80005a4:	2b02      	cmp	r3, #2
 80005a6:	d131      	bne.n	800060c <GPIO_Init+0x18c>
	{
		//configure the alt functionality re gister
		uint8_t temp1;
		uint8_t temp2;

		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	791b      	ldrb	r3, [r3, #4]
 80005ac:	08db      	lsrs	r3, r3, #3
 80005ae:	72fb      	strb	r3, [r7, #11]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	791b      	ldrb	r3, [r3, #4]
 80005b4:	f003 0307 	and.w	r3, r3, #7
 80005b8:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFRL[temp1] &= ~(15 << (4*temp2));															//clearing
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	7afa      	ldrb	r2, [r7, #11]
 80005c0:	3208      	adds	r2, #8
 80005c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005c6:	7abb      	ldrb	r3, [r7, #10]
 80005c8:	009b      	lsls	r3, r3, #2
 80005ca:	220f      	movs	r2, #15
 80005cc:	fa02 f303 	lsl.w	r3, r2, r3
 80005d0:	43db      	mvns	r3, r3
 80005d2:	4618      	mov	r0, r3
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	7afa      	ldrb	r2, [r7, #11]
 80005da:	4001      	ands	r1, r0
 80005dc:	3208      	adds	r2, #8
 80005de:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFRL[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2);
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	7afa      	ldrb	r2, [r7, #11]
 80005e8:	3208      	adds	r2, #8
 80005ea:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	7a5b      	ldrb	r3, [r3, #9]
 80005f2:	461a      	mov	r2, r3
 80005f4:	7abb      	ldrb	r3, [r7, #10]
 80005f6:	009b      	lsls	r3, r3, #2
 80005f8:	fa02 f303 	lsl.w	r3, r2, r3
 80005fc:	4618      	mov	r0, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	7afa      	ldrb	r2, [r7, #11]
 8000604:	4301      	orrs	r1, r0
 8000606:	3208      	adds	r2, #8
 8000608:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}
}
 800060c:	bf00      	nop
 800060e:	3714      	adds	r7, #20
 8000610:	46bd      	mov	sp, r7
 8000612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000616:	4770      	bx	lr

08000618 <GPIO_ReadFromInputPin>:
				}
}

/*Data read and write*/
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000618:	b480      	push	{r7}
 800061a:	b085      	sub	sp, #20
 800061c:	af00      	add	r7, sp, #0
 800061e:	6078      	str	r0, [r7, #4]
 8000620:	460b      	mov	r3, r1
 8000622:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value=(uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	691a      	ldr	r2, [r3, #16]
 8000628:	78fb      	ldrb	r3, [r7, #3]
 800062a:	fa22 f303 	lsr.w	r3, r2, r3
 800062e:	b2db      	uxtb	r3, r3
 8000630:	f003 0301 	and.w	r3, r3, #1
 8000634:	73fb      	strb	r3, [r7, #15]
	return value;
 8000636:	7bfb      	ldrb	r3, [r7, #15]
}
 8000638:	4618      	mov	r0, r3
 800063a:	3714      	adds	r7, #20
 800063c:	46bd      	mov	sp, r7
 800063e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000642:	4770      	bx	lr

08000644 <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t value)
{
	pGPIOx->ODR=value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000644:	b480      	push	{r7}
 8000646:	b083      	sub	sp, #12
 8000648:	af00      	add	r7, sp, #0
 800064a:	6078      	str	r0, [r7, #4]
 800064c:	460b      	mov	r3, r1
 800064e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR =  pGPIOx->ODR ^ (1<<PinNumber);    //XOR işlemi uygulandı
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	695b      	ldr	r3, [r3, #20]
 8000654:	78fa      	ldrb	r2, [r7, #3]
 8000656:	2101      	movs	r1, #1
 8000658:	fa01 f202 	lsl.w	r2, r1, r2
 800065c:	405a      	eors	r2, r3
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	615a      	str	r2, [r3, #20]
}
 8000662:	bf00      	nop
 8000664:	370c      	adds	r7, #12
 8000666:	46bd      	mov	sp, r7
 8000668:	f85d 7b04 	ldr.w	r7, [sp], #4
 800066c:	4770      	bx	lr
	...

08000670 <__libc_init_array>:
 8000670:	b570      	push	{r4, r5, r6, lr}
 8000672:	4d0d      	ldr	r5, [pc, #52]	; (80006a8 <__libc_init_array+0x38>)
 8000674:	4c0d      	ldr	r4, [pc, #52]	; (80006ac <__libc_init_array+0x3c>)
 8000676:	1b64      	subs	r4, r4, r5
 8000678:	10a4      	asrs	r4, r4, #2
 800067a:	2600      	movs	r6, #0
 800067c:	42a6      	cmp	r6, r4
 800067e:	d109      	bne.n	8000694 <__libc_init_array+0x24>
 8000680:	4d0b      	ldr	r5, [pc, #44]	; (80006b0 <__libc_init_array+0x40>)
 8000682:	4c0c      	ldr	r4, [pc, #48]	; (80006b4 <__libc_init_array+0x44>)
 8000684:	f000 f818 	bl	80006b8 <_init>
 8000688:	1b64      	subs	r4, r4, r5
 800068a:	10a4      	asrs	r4, r4, #2
 800068c:	2600      	movs	r6, #0
 800068e:	42a6      	cmp	r6, r4
 8000690:	d105      	bne.n	800069e <__libc_init_array+0x2e>
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f855 3b04 	ldr.w	r3, [r5], #4
 8000698:	4798      	blx	r3
 800069a:	3601      	adds	r6, #1
 800069c:	e7ee      	b.n	800067c <__libc_init_array+0xc>
 800069e:	f855 3b04 	ldr.w	r3, [r5], #4
 80006a2:	4798      	blx	r3
 80006a4:	3601      	adds	r6, #1
 80006a6:	e7f2      	b.n	800068e <__libc_init_array+0x1e>
 80006a8:	080006d0 	.word	0x080006d0
 80006ac:	080006d0 	.word	0x080006d0
 80006b0:	080006d0 	.word	0x080006d0
 80006b4:	080006d4 	.word	0x080006d4

080006b8 <_init>:
 80006b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ba:	bf00      	nop
 80006bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006be:	bc08      	pop	{r3}
 80006c0:	469e      	mov	lr, r3
 80006c2:	4770      	bx	lr

080006c4 <_fini>:
 80006c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006c6:	bf00      	nop
 80006c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ca:	bc08      	pop	{r3}
 80006cc:	469e      	mov	lr, r3
 80006ce:	4770      	bx	lr
